// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TasksFrontEnd.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using TasksFrontEnd;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\_Imports.razor"
using TasksFrontEnd.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\Components\TasksTable.razor"
using TasksFrontEnd.models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\Components\TasksTable.razor"
using TasksFrontEnd.HttpRepository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\Components\TasksTable.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\Components\TasksTable.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
    public partial class TasksTable : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 76 "C:\Users\dell\source\repos\TasksFrontEnd\TasksFrontEnd\Components\TasksTable.razor"
       
    [Parameter]
    public List<TaskReq> Products { get; set; }

    [Parameter]
    public EventCallback<int> OnDeleted { get; set; }

    [Parameter]
    public EventCallback<int> OnCheck { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public IJSRuntime Js { get; set; }
    [Inject]
    ITaskHttpRepository TaskRepo { get; set; }

    private async Task Delete(int id)
    {
        var product = Products.FirstOrDefault(p => p.Id.Equals(id));

        var confirmed = await Js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {product.Title} Task?");
        if (confirmed)
        {
            await OnDeleted.InvokeAsync(id);
        }
    }
    private async Task Check(int id)
    {
        var product = Products.FirstOrDefault(p => p.Id.Equals(id));

        var confirmed = await Js.InvokeAsync<bool>("confirm", $"Are you sure you want to Check {product.Title} Task?");
        if (confirmed)
        {
            await OnCheck.InvokeAsync(id);

        }
    }
    private async Task AddComment(int id)
    {
        NavigationManager.NavigateTo("addcomment/"+ id);
    }
    public static Guid ToGuid(int value)
    {
        byte[] bytes = new byte[16];
        BitConverter.GetBytes(value).CopyTo(bytes, 0);
        return new Guid(bytes);
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
